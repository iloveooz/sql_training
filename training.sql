--- Курс по SQL ---

-- 1. Создание таблицы
CREATE TABLE book(book_id INT PRIMARY KEY AUTO_INCREMENT, title VARCHAR(50), author VARCHAR(30), price DECIMAL(8, 2), amount INT);

-- 2. Вставка записи в таблицу
insert into book(title, author, price, amount) values('Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3);
/*
Query result:
+---------+--------------------+---------------+--------+--------+
| book_id | title              | author        | price  | amount |
+---------+--------------------+---------------+--------+--------+
| 1       | Мастер и Маргарита | Булгаков М.А. | 670.99 | 3      |
+---------+--------------------+---------------+--------+--------+
Affected rows: 1
*/

-- 3. Выборка всех данных из таблицы
select * from book;
/*
Query result:
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+
Affected rows: 5
*/

-- 4. Выборка отдельных столбцов
select author, title, price from book;
/*
Query result:
+------------------+-----------------------+--------+
| author           | title                 | price  |
+------------------+-----------------------+--------+
| Булгаков М.А.    | Мастер и Маргарита    | 670.99 |
| Булгаков М.А.    | Белая гвардия         | 540.50 |
| Достоевский Ф.М. | Идиот                 | 460.00 |
| Достоевский Ф.М. | Братья Карамазовы     | 799.01 |
| Есенин С.А.      | Стихотворения и поэмы | 650.00 |
+------------------+-----------------------+--------+
Affected rows: 5
*/

-- 5. Выборка отдельных столбцов и присвоение им новых имён
select title as 'Название', author as 'Автор' from book;
/*
Query result:
+-----------------------+------------------+
| Название              | Автор            |
+-----------------------+------------------+
| Мастер и Маргарита    | Булгаков М.А.    |
| Белая гвардия         | Булгаков М.А.    |
| Идиот                 | Достоевский Ф.М. |
| Братья Карамазовы     | Достоевский Ф.М. |
| Стихотворения и поэмы | Есенин С.А.      |
+-----------------------+------------------+
Affected rows: 5
*/

-- 6. Выборка данных с созданием вычисляемого столбца
select title, amount, amount * 1.65 as pack from book;
/*
Query result:
+-----------------------+--------+-------+
| title                 | amount | pack  |
+-----------------------+--------+-------+
| Мастер и Маргарита    | 3      | 4.95  |
| Белая гвардия         | 5      | 8.25  |
| Идиот                 | 10     | 16.50 |
| Братья Карамазовы     | 2      | 3.30  |
| Стихотворения и поэмы | 15     | 24.75 |
+-----------------------+--------+-------+
Affected rows: 5
*/

-- 7. Выборка данных, вычисляемые столбцы, математические функции
/*
	Функция 	Описание 													Пример
	ceiling(x)	возвращает наименьшее целое число, большее или равное x 	ceiling(4.2) = 5	ceiling(-5.8) = -5
	round(x, k) округляет значение x до k знаков после запятой,
				если k не указано – x округляется до целого 				round(4.361) = 4	round(5.86592,1) = 5.9
	floor(x) 	возвращает наибольшее целое число, меньшее или равное x 	floor(4.2) = 4		floor(-5.8) = -6
	power(x, y) возведение x в степень y 									power(3,4) = 81.0
	sqrt(x) 	квадратный корень из x 										sqrt(4) = 2.0		sqrt(2) = 1.41
	degrees(x) 	конвертирует значение x из радиан в градусы 				degrees(3) = 171.8
	radians(x) 	конвертирует значение x из градусов в радианы 				radians(180) = 3.14
	abs(x) 		модуль числа x 												abs(-1) = 1			abs(1) = 1
	pi 			pi = 3.1415926 	 
*/

select title, author, amount, round(price - price * 0.3, 2) as new_price from book;
/*
Query result:
+-----------------------+------------------+--------+-----------+
| title                 | author           | amount | new_price |
+-----------------------+------------------+--------+-----------+
| Мастер и Маргарита    | Булгаков М.А.    | 3      | 469.69    |
| Белая гвардия         | Булгаков М.А.    | 5      | 378.35    |
| Идиот                 | Достоевский Ф.М. | 10     | 322.00    |
| Братья Карамазовы     | Достоевский Ф.М. | 2      | 559.31    |
| Стихотворения и поэмы | Есенин С.А.      | 15     | 455.00    |
+-----------------------+------------------+--------+-----------+
Affected rows: 5
*/

-- 8. Выборка данных, вычисляемые столбцы, логические функции
-- SELECT title, amount, price, round(IF(amount < 4, price * 0.5, IF(amount < 11, price * 0.7, price * 0.9)),2) AS sale FROM book;
select author, title, round(if (author = 'Булгаков М.А.', price * 1.1, if (author = 'Есенин С.А.', price * 1.05, price)), 2) as new_price from book;
/*
Query result:
+------------------+-----------------------+-----------+
| author           | title                 | new_price |
+------------------+-----------------------+-----------+
| Булгаков М.А.    | Мастер и Маргарита    | 738.09    |
| Булгаков М.А.    | Белая гвардия         | 594.55    |
| Достоевский Ф.М. | Идиот                 | 460.00    |
| Достоевский Ф.М. | Братья Карамазовы     | 799.01    |
| Есенин С.А.      | Стихотворения и поэмы | 682.50    |
+------------------+-----------------------+-----------+
Affected rows: 5
*/

-- 9. Выборка данных по условию
select author, title, price 
from book 
where amount < 10;
/*
Query result:
+------------------+--------------------+--------+
| author           | title              | price  |
+------------------+--------------------+--------+
| Булгаков М.А.    | Мастер и Маргарита | 670.99 |
| Булгаков М.А.    | Белая гвардия      | 540.50 |
| Достоевский Ф.М. | Братья Карамазовы  | 799.01 |
+------------------+--------------------+--------+
Affected rows: 3
*/

-- 10. Выборка данных, логические операции
select title, author, price, amount 
from book
where (price < 500 or price > 600) and price * amount >= 5000;
/*
Query result:
+-----------------------+-------------+--------+--------+
| title                 | author      | price  | amount |
+-----------------------+-------------+--------+--------+
| Стихотворения и поэмы | Есенин С.А. | 650.00 | 15     |
+-----------------------+-------------+--------+--------+
Affected rows: 1
*/

-- 11. Выборка данных, операторы BETWEEN, IN
select title, author
from book
where (price between 540.50 and 800) and amount in(2, 3, 5, 7);
/*
Query result:
+--------------------+------------------+
| title              | author           |
+--------------------+------------------+
| Мастер и Маргарита | Булгаков М.А.    |
| Белая гвардия      | Булгаков М.А.    |
| Братья Карамазовы  | Достоевский Ф.М. |
+--------------------+------------------+
Affected rows: 3
*/

-- 12. Выборка данных, оператор LIKE
select title, author
from book
where (title like '_% _% _%') and author like '%с%';
/*
Query result:
+-----------------------+-------------+
| title                 | author      |
+-----------------------+-------------+
| Стихотворения и поэмы | Есенин С.А. |
+-----------------------+-------------+
Affected rows: 1
*/

-- 13. Выборка данных с сортировкой
select author, title
from book
where amount between 2 and 14
order by author desc, title asc;
/*
Query result:
+------------------+--------------------+
| author           | title              |
+------------------+--------------------+
| Достоевский Ф.М. | Братья Карамазовы  |
| Достоевский Ф.М. | Идиот              |
| Булгаков М.А.    | Белая гвардия      |
| Булгаков М.А.    | Мастер и Маргарита |
+------------------+--------------------+
Affected rows: 4
*/

-- 14. Отбор уникальных элементов некоторого столбца
SELECT DISTINCT author 
FROM book;
/* 
Query result:
+------------------+
| author           |
+------------------+
| Булгаков М.А.    |
| Достоевский Ф.М. |
| Есенин С.А.      |
+------------------+
Affected rows: 3
*/

-- 15. Группировка данных при выборке
select amount 
from book 
group by amount;
/*
Query result:
+--------+
| amount |
+--------+
| 3      |
| 5      |
| 10     |
| 15     |
+--------+
Affected rows: 4
*/ 

-- 16. Выборка данных, групповые функции SUM и COUNT
-- SELECT author, SUM(amount) FROM book GROUP BY author;
-- SELECT author, COUNT(author), COUNT(amount), COUNT(*) FROM book GROUP BY author;

-- COUNT(*) — подсчитывает все записи, относящиеся к группе, в том числе и со значением NULL;
-- COUNT(имя_столбца) — возвращает количество записей конкретного столбца (только NOT NULL), относящихся к группе.

-- ВАЖНО	После оператора GROUP BY должны перечисляться ВСЕ неагрегированные столбцы, 
-- 			т.е. столбцы, к которым не применены групповые функции), указанные после SELECT.

select author as 'Автор', count(title) as 'Различных_книг', sum(amount) as 'Количество_экземпляров'
from book
group by author;
/*
Query result:
+------------------+----------------+------------------------+
| Автор            | Различных_книг | Количество_экземпляров |
+------------------+----------------+------------------------+
| Булгаков М.А.    | 2              | 8                      |
| Достоевский Ф.М. | 3              | 23                     |
| Есенин С.А.      | 1              | 15                     |
+------------------+----------------+------------------------+
Affected rows: 3
*/

-- 17. Выборка данных, групповые функции MIN, MAX и AVG
select author, min(price) as 'Минимальная_цена', max(price) as 'Максимальная_цена', avg(price) as 'Средняя_цена'
from book
group by author;
/*
Query result:
+------------------+------------------+-------------------+--------------+
| author           | Минимальная_цена | Максимальная_цена | Средняя_цена |
+------------------+------------------+-------------------+--------------+
| Булгаков М.А.    | 540.50           | 670.99            | 605.745000   |
| Достоевский Ф.М. | 460.00           | 799.01            | 579.836667   |
| Есенин С.А.      | 650.00           | 650.00            | 650.000000   |
+------------------+------------------+-------------------+--------------+
Affected rows: 3
*/

-- 18. Выборка данных c вычислением, групповые функции
select author, 
sum(price * amount) as 'Стоимость', 
round((sum(price * amount) * 0.18) / 1.18, 2) as 'НДС',
round(sum(price * amount) / 1.18, 2) as 'Стоимость_без_НДС' 
from book
group by author;
/*
Query result:
+------------------+-----------+---------+-------------------+
| author           | Стоимость | НДС     | Стоимость_без_НДС |
+------------------+-----------+---------+-------------------+
| Булгаков М.А.    | 4715.47   | 719.31  | 3996.16           |
| Достоевский Ф.М. | 11802.03  | 1800.31 | 10001.72          |
| Есенин С.А.      | 9750.00   | 1487.29 | 8262.71           |
+------------------+-----------+---------+-------------------+
Affected rows: 3
*/

-- 19. Вычисления по таблице целиком
select min(price) as 'Минимальная_цена', max(price) as 'Максимальная_цена', round(avg(price), 2) as 'Средняя_цена'
from book;
/*
Query result:
+------------------+-------------------+--------------+
| Минимальная_цена | Максимальная_цена | Средняя_цена |
+------------------+-------------------+--------------+
| 460.00           | 799.01            | 600.17       |
+------------------+-------------------+--------------+
Affected rows: 1
*/

-- 20. Выборка данных по условию, групповые функции (HAVING)
-- Пояснение. Если в запросе с групповыми функциями отсутствует GROUP BY, то для отбора записей используется ключевое слово WHERE.
select 
round(avg(price), 2) as 'Средняя_цена', 
round(sum(price * amount), 2) as 'Стоимость'
from book
where (amount between 5 and 14);
/*
Query result:
+--------------+-----------+
| Средняя_цена | Стоимость |
+--------------+-----------+
| 493.67       | 12107.50  |
+--------------+-----------+
Affected rows: 1
*/

-- 21. Выборка данных по условию, групповые функции, WHERE и HAVING
select author, round(sum(price * amount), 2) as 'Стоимость'
from book
where title not in('Идиот', 'Белая гвардия')
group by author
having sum(price * amount) > 5000
order by 1 desc;
/*
Query result:
+------------------+-----------+
| author           | Стоимость |
+------------------+-----------+
| Есенин С.А.      | 9750.00   |
| Достоевский Ф.М. | 7202.03   |
+------------------+-----------+
Affected rows: 2
*/

-- 22. Вложенный запрос, возвращающий одно значение
select author, title, price
from book
where price <= (select round(avg(price), 2) from book)
order by price desc;
/*
Query result:
+------------------+---------------+--------+
| author           | title         | price  |
+------------------+---------------+--------+
| Булгаков М.А.    | Белая гвардия | 540.50 |
| Достоевский Ф.М. | Игрок         | 480.50 |
| Достоевский Ф.М. | Идиот         | 460.00 |
+------------------+---------------+--------+
Affected rows: 3
*/

-- 23. Использование вложенного запроса в выражении
/*
Вывести информацию (автора, название и цену) о тех книгах, 
цены которых превышают минимальную цену книги на складе 
не более чем на 150 рублей в отсортированном по возрастанию цены виде.
*/
select author, title, price 
from book
where price <= ((SELECT min(price) FROM book) + 150)
order by price asc;
/*
Query result:
+------------------+---------------+--------+
| author           | title         | price  |
+------------------+---------------+--------+
| Достоевский Ф.М. | Идиот         | 460.00 |
| Достоевский Ф.М. | Игрок         | 480.50 |
| Булгаков М.А.    | Белая гвардия | 540.50 |
+------------------+---------------+--------+
Affected rows: 3
*/

-- 24. Вложенный запрос, оператор IN
/*
Вывести информацию (автора, книгу и количество) о тех книгах, количество которых в таблице book не повторяется.
*/
select author, title, amount 
from book
where amount in(
	SELECT amount 
	FROM book 
	GROUP BY amount 
	HAVING count(amount) = 1);
/*
Query result:
+---------------+-----------------------+--------+
| author        | title                 | amount |
+---------------+-----------------------+--------+
| Булгаков М.А. | Белая гвардия         | 5      |
| Есенин С.А.   | Стихотворения и поэмы | 15     |
+---------------+-----------------------+--------+
Affected rows: 2
*/

-- 25. Вложенный запрос, операторы ANY и ALL
-- Вложенный запрос, возвращающий несколько значений одного столбца, 
-- можно использовать для отбора записей с помощью операторов ANY и ALL 
-- совместно с операциями отношения (=, <>, <=, >=, <, >).

-- Важно! Операторы ALL и ANY можно использовать только с вложенными запросами.

/*
Вывести информацию о книгах(автор, название, цена) только тех авторов, средняя цена книг которых выше, чем средняя цена книг на складе в целом.
*/
select author, title, price
from book
where author in (
select author
from book
group by author
having avg(price) > (select round(avg(price), 2) from book));
/*
Query result:
+---------------+-----------------------+--------+
| author        | title                 | price  |
+---------------+-----------------------+--------+
| Булгаков М.А. | Мастер и Маргарита    | 670.99 |
| Булгаков М.А. | Белая гвардия         | 540.50 |
| Есенин С.А.   | Стихотворения и поэмы | 650.00 |
+---------------+-----------------------+--------+
Affected rows: 3
*/

-- 26. Вложенный запрос после SELECT
/*
Посчитать сколько и каких книг нужно заказать поставщикам, чтобы на складе было одинаковое количество каждой книги, 
равное максимальному значению из всех количеств книг, хранящихся на складе. Столбцу с количеством заказываемых книг присвоить имя Заказ.
*/
select title, author, amount, ((select max(amount) from book) - amount) as 'Заказ'
from book
where amount <> (select max(amount) from book);
/*
Query result:
+--------------------+------------------+--------+-------+
| title              | author           | amount | Заказ |
+--------------------+------------------+--------+-------+
| Мастер и Маргарита | Булгаков М.А.    | 3      | 12    |
| Белая гвардия      | Булгаков М.А.    | 5      | 10    |
| Идиот              | Достоевский Ф.М. | 10     | 5     |
| Братья Карамазовы  | Достоевский Ф.М. | 3      | 12    |
| Игрок              | Достоевский Ф.М. | 10     | 5     |
+--------------------+------------------+--------+-------+
Affected rows: 5
*/

-- Модуль запросы корректировки данных
-- 27. Создание пустой таблицы
/*
Создать таблицу поставка (supply), которая имеет ту же структуру, что и таблица book.
*/
create table supply (
    supply_id INT PRIMARY KEY AUTO_INCREMENT,
    title varchar(50),
    author varchar(30),
    price decimal(8, 2),
    amount int);

/*
Affected rows: 0
*/

-- 28. Добавление записей в таблицу
insert into supply (title, author, price, amount) values ('Лирика', 'Пастернак Б.Л.', 518.99, 2);
insert into supply (title, author, price, amount) values ('Черный человек', 'Есенин С.А.', 570.20, 6);
insert into supply (title, author, price, amount) values ('Белая гвардия', 'Булгаков М.А.', 540.50, 7);
insert into supply (title, author, price, amount) values ('Идиот', 'Достоевский Ф.М.', 360.80, 3);

/*
Affected rows: 1
Affected rows: 1
Affected rows: 1
Affected rows: 1
Query result:
+-----------+----------------+------------------+--------+--------+
| supply_id | title          | author           | price  | amount |
+-----------+----------------+------------------+--------+--------+
| 1         | Лирика         | Пастернак Б.Л.   | 518.99 | 2      |
| 2         | Черный человек | Есенин С.А.      | 570.20 | 6      |
| 3         | Белая гвардия  | Булгаков М.А.    | 540.50 | 7      |
| 4         | Идиот          | Достоевский Ф.М. | 360.80 | 3      |
+-----------+----------------+------------------+--------+--------+
Affected rows: 4
*/

-- 29. Добавление записей из другой таблицы
/*
Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым и Достоевским.
*/
insert into book(title, author, price, amount) 
    select title, author, price, amount
    from supply
    where author not in ('Булгаков М.А.', 'Достоевский Ф.М.');
/*
Affected rows: 2

Query result:
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
| 6       | Лирика                | Пастернак Б.Л.   | 518.99 | 2      |
| 7       | Черный человек        | Есенин С.А.      | 570.20 | 6      |
+---------+-----------------------+------------------+--------+--------+
Affected rows: 7
*/

-- 30. Добавление записей, вложенные запросы
/*
Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
*/
insert into book (title, author, price, amount)
    select title, author, price, amount
    from supply
    where author not in (select author from book);

select * from book;
/*
Affected rows: 1

Query result:
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
| 6       | Лирика                | Пастернак Б.Л.   | 518.99 | 2      |
+---------+-----------------------+------------------+--------+--------+
Affected rows: 6
*/

-- 31. Запросы на обновление
/*
Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
*/
update book set price = price * 0.9
where (amount between 5 and 10);
select * from book;
/*
Affected rows: 2

Query result:
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 486.45 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 414.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+
Affected rows: 5
*/

-- 32. Запросы на обновление нескольких столбцов
/*
В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, 
что бы оно не превышало допустимый остаток в столбце amount. 
А цену тех книг, которые покупатель не заказывал, снизить на 10%, 
округлив полученную цену до двух знаков после запятой.
*/
update book set buy = if(buy > amount, amount, buy), price = if(buy = 0, round(price * 0.9, 2), price);
select * from book;
/*
Affected rows: 3

Query result:
+---------+-----------------------+------------------+--------+--------+-----+
| book_id | title                 | author           | price  | amount | buy |
+---------+-----------------------+------------------+--------+--------+-----+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 603.89 | 3      | 0   |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      | 3   |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     | 8   |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 719.11 | 2      | 0   |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     | 15  |
+---------+-----------------------+------------------+--------+--------+-----+
Affected rows: 5
*/

-- 33. Запросы на обновление, несколько таблиц
/*
Для одинаковых книг в таблицах book и supply не только увеличить их количество в таблице book 
(увеличить их количество на значение столбца amountтаблицы supply), 
но и пересчитать их цену (для каждой книги найти сумму цен из таблиц book и supply и разделить на 2).

Да, если таблицу не указать, то нельзя будет обратиться к ее столбцам.
*/
update book, supply set book.amount = book.amount + supply.amount, book.price = (book.price + supply.price) / 2
where book.author = supply.author and book.title = supply.title;
select * from book;
/*
Affected rows: 2

Query result:
+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 12     |
| 3       | Идиот                 | Достоевский Ф.М. | 410.40 | 13     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
| 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+
Affected rows: 5
*/

-- 34. Запросы на удаление
/*
Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.
*/
delete from supply
where supply.author in (
    select book.author 
    from book 
    group by author
    having sum(amount) >= 10);
select * from supply;
/*
Affected rows: 2

Query result:
+-----------+---------------+----------------+--------+--------+
| supply_id | title         | author         | price  | amount |
+-----------+---------------+----------------+--------+--------+
| 1         | Лирика        | Пастернак Б.Л. | 518.99 | 2      |
| 3         | Белая гвардия | Булгаков М.А.  | 540.50 | 7      |
+-----------+---------------+----------------+--------+--------+
Affected rows: 2
*/

-- 35. Запросы на создание таблицы
/*
Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, 
количество которых в таблице book меньше среднего количества книг в таблице book. 
Для всех книг указать одинаковое значение - среднее количество книг в таблице book.
*/
create table ordering as
select author, title, 7 as amount
from book
where amount < (select round(avg(amount)) from book);
select * from ordering;
/*
Affected rows: 3

Query result:
+------------------+--------------------+--------+
| author           | title              | amount |
+------------------+--------------------+--------+
| Булгаков М.А.    | Мастер и Маргарита | 7      |
| Булгаков М.А.    | Белая гвардия      | 7      |
| Достоевский Ф.М. | Братья Карамазовы  | 7      |
+------------------+--------------------+--------+
Affected rows: 3
*/

-- 36. Таблица "Командировки", запросы на выборку
/*
Вывести из таблицы trip информацию о командировках тех сотрудников, 
фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты 
последнего дня командировки виде. В результат включить столбцы name, city, per_diem, date_first, date_last.
*/
select name, city, per_diem, date_first, date_last
from trip
where name like "%а %"
order by date_last desc;
/*
Query result:
+---------------+-----------------+----------+------------+------------+
| name          | city            | per_diem | date_first | date_last  |
+---------------+-----------------+----------+------------+------------+
| Абрамова К.А. | Владивосток     | 450.00   | 2020-07-02 | 2020-07-13 |
| Федорова А.Ю. | Томск           | 450.00   | 2020-06-20 | 2020-06-26 |
| Абрамова К.А. | Санкт-Петербург | 700.00   | 2020-05-28 | 2020-06-04 |
| Федорова А.Ю. | Новосибирск     | 450.00   | 2020-05-25 | 2020-06-04 |
| Абрамова К.А. | Москва          | 700.00   | 2020-04-06 | 2020-04-14 |
| Абрамова К.А. | Москва          | 700.00   | 2020-02-23 | 2020-03-01 |
| Абрамова К.А. | Владивосток     | 450.00   | 2020-01-14 | 2020-01-27 |
+---------------+-----------------+----------+------------+------------+
Affected rows: 7
*/

-- 37. Таблица "Командировки", запросы на выборку
/*
Вывести в алфавитном порядке фамилии и  инициалы тех сотрудников, которые были в командировке в Москве.
*/
select distinct name
from trip t
where t.city = "Москва"
order by name asc;
/*
Query result:
+---------------+
| name          |
+---------------+
| Абрамова К.А. |
| Баранов П.Е.  |
| Колесов С.П.  |
| Лебедев Т.К.  |
| Семенов И.В.  |
+---------------+
Affected rows: 5
*/

-- 38. Таблица "Командировки", запросы на выборку
/*
Для каждого города посчитать, сколько раз сотрудники в нем были.  
Информацию вывести в отсортированном в алфавитном порядке по названию городов. 
Вычисляемый столбец назвать Количество.
*/
select city, count(city) as 'Количество'
from trip
group by city
order by city;
/*
Query result:
+-----------------+------------+
| city            | Количество |
+-----------------+------------+
| Владивосток     | 3          |
| Воронеж         | 1          |
| Москва          | 7          |
| Новосибирск     | 4          |
| Санкт-Петербург | 3          |
| Томск           | 2          |
+-----------------+------------+
Affected rows: 6
*/

-- 39. Таблица "Командировки", запросы на выборку
/*
Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.
*/
select city, count(city) as 'Количество'
from trip
group by city
order by Количество desc
limit 2;
/*
Query result:
+-------------+------------+
| city        | Количество |
+-------------+------------+
| Москва      | 7          |
| Новосибирск | 4          |
+-------------+------------+
Affected rows: 2
*/

-- 40. Таблица "Командировки", запросы на выборку
/*
Для вычитания двух дат используется функция DATEDIFF(дата_1, дата_2), 
результатом которой является количество дней между дата_1 и дата_2.

Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга 
(фамилии и инициалы сотрудников, город, длительность командировки в днях, 
при этом первый и последний день относится к периоду командировки). 
Информацию вывести в упорядоченном по убыванию длительности поездки, 
а потом по убыванию названий городов (в обратном алфавитном порядке).
*/
select name, city, datediff(date_last, date_first) + 1 as 'Длительность'
from trip
where city not in ('Москва', 'Санкт-Петербург')
order by Длительность desc, city desc;
/*
Query result:
+---------------+-------------+--------------+
| name          | city        | Длительность |
+---------------+-------------+--------------+
| Ильиных Г.Р.  | Владивосток | 22           |
| Баранов П.Е.  | Новосибирск | 17           |
| Колесов С.П.  | Новосибирск | 15           |
| Абрамова К.А. | Владивосток | 14           |
| Лебедев Т.К.  | Томск       | 12           |
| Абрамова К.А. | Владивосток | 12           |
| Федорова А.Ю. | Новосибирск | 11           |
| Колесов С.П.  | Новосибирск | 10           |
| Федорова А.Ю. | Томск       | 7            |
| Баранов П.Е.  | Воронеж     | 7            |
+---------------+-------------+--------------+
Affected rows: 10
*/

-- 41. Таблица "Командировки", запросы на выборку
/*
Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени.
*/
select name, city, date_first, date_last
from trip
where datediff(date_last, date_first) = (select min(datediff(date_last, date_first)) from trip);
/*
Query result:
+--------------+-----------------+------------+------------+
| name         | city            | date_first | date_last  |
+--------------+-----------------+------------+------------+
| Семенов И.В. | Санкт-Петербург | 2020-06-01 | 2020-06-03 |
+--------------+-----------------+------------+------------+
Affected rows: 1
*/

-- 42. Таблица "Командировки", запросы на выборку
/*
Вывести информацию о командировках, начало и конец которых относятся к одному месяцу. 
Результат отсортировать сначала  в алфавитном порядке по названию города, а затем по фамилии сотрудника .
*/
select name, city, date_first, date_last
from trip
where month(date_first) = month(date_last)
order by city asc, name asc;
/*
Query result:
+---------------+-----------------+------------+------------+
| name          | city            | date_first | date_last  |
+---------------+-----------------+------------+------------+
| Абрамова К.А. | Владивосток     | 2020-01-14 | 2020-01-27 |
| Абрамова К.А. | Владивосток     | 2020-07-02 | 2020-07-13 |
| Баранов П.Е.  | Воронеж         | 2020-07-19 | 2020-07-25 |
| Абрамова К.А. | Москва          | 2020-04-06 | 2020-04-14 |
| Баранов П.Е.  | Москва          | 2020-01-12 | 2020-01-17 |
| Баранов П.Е.  | Москва          | 2020-02-14 | 2020-02-22 |
| Колесов С.П.  | Москва          | 2020-02-01 | 2020-02-06 |
| Лебедев Т.К.  | Москва          | 2020-03-03 | 2020-03-06 |
| Семенов И.В.  | Москва          | 2020-01-23 | 2020-01-31 |
| Колесов С.П.  | Новосибирск     | 2020-06-03 | 2020-06-12 |
| Семенов И.В.  | Санкт-Петербург | 2020-06-01 | 2020-06-03 |
| Лебедев Т.К.  | Томск           | 2020-05-20 | 2020-05-31 |
| Федорова А.Ю. | Томск           | 2020-06-20 | 2020-06-26 |
+---------------+-----------------+------------+------------+
Affected rows: 13
*/

-- 43. Таблица "Командировки", запросы на выборку
/*
Вывести название месяца и количество командировок для каждого месяца. 
Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце. 
Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. 
Название столбцов – Месяц и Количество.
*/
select monthname(date_first) as 'Месяц', count(monthname(date_first)) as 'Количество'
from trip
group by 1
order by 2 desc, 1 asc
/*
Query result:
+----------+------------+
| Месяц    | Количество |
+----------+------------+
| February | 4          |
| January  | 4          |
| June     | 3          |
| May      | 3          |
| April    | 2          |
| July     | 2          |
| March    | 2          |
+----------+------------+
Affected rows: 7
*/

-- 44. Таблица "Командировки", запросы на выборку
/*
 Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, 
 первый день которых пришелся на февраль или март 2020 года. Информацию отсортировать сначала
 в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.
*/
select name, city, date_first, ((datediff(date_last, date_first) + 1) * per_diem) as 'Сумма'
from trip
where month(date_first) in (2, 3)
order by 1 asc, 4 desc;
/*
Query result:
+---------------+-----------------+------------+---------+
| name          | city            | date_first | Сумма   |
+---------------+-----------------+------------+---------+
| Абрамова К.А. | Москва          | 2020-02-23 | 5600.00 |
| Баранов П.Е.  | Москва          | 2020-02-14 | 6300.00 |
| Колесов С.П.  | Новосибирск     | 2020-02-27 | 6750.00 |
| Колесов С.П.  | Москва          | 2020-02-01 | 4200.00 |
| Лебедев Т.К.  | Москва          | 2020-03-03 | 2800.00 |
| Семенов И.В.  | Санкт-Петербург | 2020-03-29 | 5600.00 |
+---------------+-----------------+------------+---------+
Affected rows: 6
*/

-- 45. Таблица "Командировки", запросы на выборку
/*
Вывести фамилию с инициалами и общую сумму суточных, полученных за все командировки для тех сотрудников, 
которые были в командировках больше чем 3 раза, в отсортированном по убыванию сумм суточных виде.
*/
select name, sum(per_diem * (datediff(date_last, date_first) + 1))  as 'Сумма'
from trip
group by name
having count(name) > 3
order by 2 desc;
/*
Query result:
+---------------+----------+
| name          | Сумма    |
+---------------+----------+
| Абрамова К.А. | 29200.00 |
| Баранов П.Е.  | 21300.00 |
+---------------+----------+
Affected rows: 2
*/

-- 46. Таблица "Нарушения ПДД", запросы корректировки
/*
Создать таблицу fine
*/
create table fine (
    fine_id INT PRIMARY KEY AUTO_INCREMENT,
    name varchar(30),
    number_plate varchar(6),
    violation varchar(50),
    sum_fine decimal(8, 2),
    date_violation date,
    date_payment date
);
/*
Affected rows: 0
*/

-- 47. Таблица "Нарушения ПДД", запросы корректировки
/*
В таблицу fine первые 5 строк уже занесены. Добавить в таблицу записи с ключевыми значениями 6, 7, 8.
*/
insert into fine(name, number_plate, violation, sum_fine, date_violation, date_payment) values(
    'Баранов П.Е.','Р523ВТ', 'Превышение скорости(от 40 до 60)', null, '2020-02-14', null);
insert into fine(name, number_plate, violation, sum_fine, date_violation, date_payment) values(
    'Абрамова К.А.', 'О111АВ', 'Проезд на запрещающий сигнал', null, '2020-02-23', null);
insert into fine(name, number_plate, violation, sum_fine, date_violation, date_payment) values(
    'Яковлев Г.Р.', 'Т330ТТ', 'Проезд на запрещающий сигнал', null, '2020-03-03', null);
select * from fine;
/*
Affected rows: 1
Affected rows: 1
Affected rows: 1

Query result:
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| fine_id | name          | number_plate | violation                        | sum_fine | date_violation | date_payment |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| 1       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 500.00   | 2020-01-12     | 2020-01-17   |
| 2       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-01-14     | 2020-02-27   |
| 3       | Яковлев Г.Р.  | Т330ТТ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-01-23     | 2020-02-23   |
| 4       | Яковлев Г.Р.  | М701АА       | Превышение скорости(от 20 до 40) | None     | 2020-01-12     | None         |
| 5       | Колесов С.П.  | К892АХ       | Превышение скорости(от 20 до 40) | None     | 2020-02-01     | None         |
| 6       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | None     | 2020-02-14     | None         |
| 7       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | None     | 2020-02-23     | None         |
| 8       | Яковлев Г.Р.  | Т330ТТ       | Проезд на запрещающий сигнал     | None     | 2020-03-03     | None         |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
Affected rows: 8
*/

-- 48. Использование временного имени таблицы (алиаса)
/*
Как правило, в качестве алиаса выбирают аббревиатуру названия таблицы

Занести в таблицу fine суммы штрафов, которые должен оплатить водитель, в соответствии с данными из таблицы traffic_violation. 
При этом суммы заносить только в пустые поля столбца sum_fine.
Таблица traffic_violation создана и заполнена.
Сравнение значения столбца с пустым значением осуществляется с помощью оператора is null
*/
update fine as f, traffic_violation as tv
set f.sum_fine = tv.sum_fine
where f.sum_fine is null and f.violation = tv.violation;
select * from fine;
/*
Affected rows: 5

Query result:
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| fine_id | name          | number_plate | violation                        | sum_fine | date_violation | date_payment |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| 1       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 500.00   | 2020-01-12     | 2020-01-17   |
| 2       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-01-14     | 2020-02-27   |
| 3       | Яковлев Г.Р.  | Т330ТТ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-01-23     | 2020-02-23   |
| 4       | Яковлев Г.Р.  | М701АА       | Превышение скорости(от 20 до 40) | 500.00   | 2020-01-12     | None         |
| 5       | Колесов С.П.  | К892АХ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-02-01     | None         |
| 6       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 1000.00  | 2020-02-14     | None         |
| 7       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-02-23     | None         |
| 8       | Яковлев Г.Р.  | Т330ТТ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-03-03     | None         |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
Affected rows: 8
*/

-- 49. Таблица "Нарушения ПДД", запросы корректировки
/*
Вывести фамилию, номер машины и нарушение только для тех водителей, которые на одной машине нарушили одно и тоже правило два и более раз.
*/
select name, number_plate, violation 
from fine 
group by name, number_plate, violation
having count(violation) >= 2;
/*
Query result:
+---------------+--------------+----------------------------------+
| name          | number_plate | violation                        |
+---------------+--------------+----------------------------------+
| Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) |
| Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     |
+---------------+--------------+----------------------------------+
Affected rows: 2
*/

-- 50. Таблица "Нарушения ПДД", запросы корректировки
/*
Увеличить в два раза сумму неоплаченных штрафов для отобранных на предыдущем шаге записей. 
При этом считать, что увеличивать сумму нужно только для неоплаченных штрафов.
*/
update fine as f, (
    select name, number_plate, violation 
    from fine
    group by name, number_plate, violation
    having count(violation) >= 2) as query_in
set f.sum_fine = f.sum_fine * 2
where f.date_payment is null and (f.name, f.number_plate) = (query_in.name, query_in.number_plate);
select * from fine;
/*
Affected rows: 2

Query result:
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| fine_id | name          | number_plate | violation                        | sum_fine | date_violation | date_payment |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| 1       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 500.00   | 2020-01-12     | 2020-01-17   |
| 2       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-01-14     | 2020-02-27   |
| 3       | Яковлев Г.Р.  | Т330ТТ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-01-23     | 2020-02-23   |
| 4       | Яковлев Г.Р.  | М701АА       | Превышение скорости(от 20 до 40) | 500.00   | 2020-01-12     | None         |
| 5       | Колесов С.П.  | К892АХ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-02-01     | None         |
| 6       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 2000.00  | 2020-02-14     | None         |
| 7       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 2000.00  | 2020-02-23     | None         |
| 8       | Яковлев Г.Р.  | Т330ТТ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-03-03     | None         |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
Affected rows: 8
*/

-- 51. Таблица "Нарушения ПДД", запросы корректировки
/*
Необходимо в таблицу fine занести дату оплаты соответствующего штрафа из таблицы payment и 
уменьшить начисленный штраф в таблице fine в два раза (только для новых штрафов, дата оплаты которых занесена в payment),
если оплата произведена не более, чем за 20 дней со дня нарушения.
*/
update fine as f, payment as p
set f.date_payment = p.date_payment, f.sum_fine = if(datediff(p.date_payment, f.date_violation) < 20, f.sum_fine / 2, f.sum_fine)
where f.date_payment is null and (f.name, f.number_plate, f.violation) = (p.name, p.number_plate, p.violation);
select * from fine;
/*
Affected rows: 3

Query result:
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| fine_id | name          | number_plate | violation                        | sum_fine | date_violation | date_payment |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| 1       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 500.00   | 2020-01-12     | 2020-01-17   |
| 2       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 1000.00  | 2020-01-14     | 2020-02-27   |
| 3       | Яковлев Г.Р.  | Т330ТТ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-01-23     | 2020-02-23   |
| 4       | Яковлев Г.Р.  | М701АА       | Превышение скорости(от 20 до 40) | 250.00   | 2020-01-12     | 2020-01-22   |
| 5       | Колесов С.П.  | К892АХ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-02-01     | None         |
| 6       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 2000.00  | 2020-02-14     | 2020-03-15   |
| 7       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 2000.00  | 2020-02-23     | None         |
| 8       | Яковлев Г.Р.  | Т330ТТ       | Проезд на запрещающий сигнал     | 500.00   | 2020-03-03     | 2020-03-21   |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
Affected rows: 8
*/

-- 52. Таблица "Нарушения ПДД", запросы корректировки
/*
Создать новую таблицу back_payment, куда внести информацию о неоплаченных штрафах.
Фамилию и инициалы водителя, номер машины, нарушение, сумму штрафа и дату нарушения взять из таблицы fine.
*/
create table back_payment as
select name, number_plate, violation, sum_fine, date_violation from fine
where fine.date_payment is null;
                   
select * from back_payment;
/*
Affected rows: 2

Query result:
+---------------+--------------+----------------------------------+----------+----------------+
| name          | number_plate | violation                        | sum_fine | date_violation |
+---------------+--------------+----------------------------------+----------+----------------+
| Колесов С.П.  | К892АХ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-02-01     |
| Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 2000.00  | 2020-02-23     |
+---------------+--------------+----------------------------------+----------+----------------+
Affected rows: 2
*/

-- 53. Таблица "Нарушения ПДД", запросы корректировки
/*
Удалить из таблицы fine информацию о нарушениях, совершенных раньше 1 февраля 2020 года.
*/
delete from fine as f
where f.date_violation < date('2020-02-01');
select * from fine;
/*
Query result:
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| fine_id | name          | number_plate | violation                        | sum_fine | date_violation | date_payment |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
| 5       | Колесов С.П.  | К892АХ       | Превышение скорости(от 20 до 40) | 500.00   | 2020-02-01     | None         |
| 6       | Баранов П.Е.  | Р523ВТ       | Превышение скорости(от 40 до 60) | 2000.00  | 2020-02-14     | 2020-03-15   |
| 7       | Абрамова К.А. | О111АВ       | Проезд на запрещающий сигнал     | 2000.00  | 2020-02-23     | None         |
| 8       | Яковлев Г.Р.  | Т330ТТ       | Проезд на запрещающий сигнал     | 500.00   | 2020-03-03     | 2020-03-21   |
+---------+---------------+--------------+----------------------------------+----------+----------------+--------------+
Affected rows: 4
*/

-- 54. Связь "один ко многим"
/*
Связь "один ко многим" имеет место, когда одной записи главной таблицы соответствует несколько записей связанной таблицы,
 а каждой записи связанной таблицы соответствует только одна запись главной таблицы.

1. Создать таблицу author, в которую включить всех различных авторов из таблицы book, а затем удалить столбец с фамилиями авторов из таблицы book.

2. Обе таблицы должны содержать первичный ключ, в таблице book он уже есть, в таблицу author добавим ключ author_id.

3. Включить в таблицу book связанный столбец (внешний ключ, FOREIGN KEY), 
соответствующий по имени и типу ключевому столбцу главной таблицы (в нашем случае это столбец author_id). 
Для наглядности связь на схеме обозначается стрелкой от ключевого столбца главной таблицы к внешнему ключу связной таблицы.
*/

-- 55. Связь "многие ко многим"
/*
Связь "многие ко многим" имеет место когда каждой записи одной таблицы соответствует несколько записей во второй,
 и наоборот, каждой записи второй таблицы соответствует несколько записей в первой.
 
1. Создать таблицу author, в которую включить всех различных авторов из таблицы book, а затем удалить столбец с фамилиями авторов из таблицы book.

2. В обеих таблицах необходимо определить первичный ключ, в нашем случае в таблице book он уже есть, 
поэтому достаточно включить первичный ключ author_id в таблицу author.

3. Создать новую таблицу-связку, состоящую из двух столбцов, соответствующих по имени и типу ключевым столбцам исходных таблиц. 
Каждый из этих столбцов является внешним ключом (FOREIGN KEY)  и связан с ключевым столбцом каждой таблицы. 
Для наглядности связи на схеме обозначаются стрелкой от ключевого столбца исходной таблицы к внешнему ключу связной таблицы.

4. Дальше необходимо определиться с первичным ключом таблицы-связки. 
Можно сделать два ключевых столбца, тогда все записи в этой таблице должны быть уникальными, то есть не повторяться. 
Для связи автор-книга этот вариант подходит. Но в некоторых случаях записи в таблице-связке могут повторяться, 
например, если мы будем продавать книги покупателям (один человек может купить несколько книг, 
а одну и ту же книгу могут купить несколько человек). 

Тогда в таблицу-связку включают дополнительные столбцы для идентификации записей, 
например, дату продажи, также в таблицу-связку добавляют первичный ключ.
*/

-- 56. Связи между таблицами
/*
Создать таблицу author
*/
create table author (author_id INT PRIMARY KEY AUTO_INCREMENT, name_author varchar(50));
/*
Affected rows: 0
*/

-- 57.
/*
Заполнить таблицу author
*/
insert into author(name_author) values ('Булгаков М.А.');
insert into author(name_author) values ('Достоевский Ф.М.');
insert into author(name_author) values ('Есенин С.А.');
insert into author(name_author) values ('Пастернак Б.Л.');
select * from author;

-- 58. Создание таблицы с внешними ключами
/*
FOREIGN KEY (связанное_поле_зависимой_таблицы)  
REFERENCES главная_таблица (связанное_поле_главной_таблицы)

Создать таблицу book
*/
create table book (
    book_id int PRIMARY key AUTO_INCREMENT,
    title varchar(50),
    author_id int,
    genre_id int
    price decimal(8, 2),
    amount int,
    foreign key (author_id) references author(author_id),
    foreign key (genre_id) references genre(genre_id)
);	
/*
Affected rows: 0
*/

-- 59. Действия при удалении записи главной таблицы
/*
С помощью выражения ON DELETE  можно установить действия, 
которые выполняются для записей подчиненной таблицы при удалении связанной строки из главной таблицы. 
При удалении можно установить следующие опции:

    CASCADE: автоматически удаляет строки из зависимой таблицы при удалении  связанных строк в главной таблице.
    SET NULL: при удалении  связанной строки из главной таблицы устанавливает для столбца внешнего ключа значение NULL. 
		(В этом случае столбец внешнего ключа должен поддерживать установку NULL).
    SET DEFAULT похоже на SET NULL за тем исключением, что значение  внешнего ключа устанавливается не в NULL, 
		а в значение по умолчанию для данного столбца.
    RESTRICT: отклоняет удаление строк в главной таблице при наличии связанных строк в зависимой таблице.

Создать таблицу book той же структуры, что и на предыдущем шаге. 
Будем считать, что при удалении автора из таблицы author, 
должны удаляться все записи о книгах из таблицы book, написанные этим автором. 
А при удалении жанра из таблицы genre для соответствующей записи book установить значение Null в столбце genre_id.
*/
create table book (
    book_id int PRIMARY key AUTO_INCREMENT,
    title varchar(50),
    author_id int,
    genre_id int,
    price decimal(8, 2),
    amount int,
    foreign key (author_id) references author(author_id) on delete cascade,
    foreign key (genre_id) references genre(genre_id) on delete set null
);
/*
Affected rows: 0
*/

